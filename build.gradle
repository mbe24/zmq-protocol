buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.7'
    }
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.beyene.zmq'
version '1.0-SNAPSHOT'

mainClassName = 'org.beyene.zmq.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

compileJava {
    options.compilerArgs << "-Xlint:all"
}

dependencies {
    compile 'org.zeromq:jeromq:0.4.3'
    compile 'info.picocli:picocli:3.8.2'
    compile 'com.google.protobuf:protobuf-java:3.6.1'
//    compile 'org.msgpack:msgpack-core:0.8.16'
    compile 'org.springframework.boot:spring-boot-starter'
    testCompile 'junit:junit:4.12'
}

// see: https://stackoverflow.com/questions/32820728/simple-protobuf-compilation-with-gradle
protobuf {
    // configure the protoc executable
    protoc {
        // download from repositories
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }

    generateProtoTasks.generatedFilesBaseDir = 'src'
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // here you can configure the task
        }

        // in addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')
    }
}
